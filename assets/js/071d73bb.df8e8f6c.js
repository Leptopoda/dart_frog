"use strict";(self.webpackChunkdart_frog_docs=self.webpackChunkdart_frog_docs||[]).push([[719],{2767:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var n=r(5893),o=r(1151);const i={sidebar_position:1,title:"\ud83c\udfac Custom Server Entrypoint"},s="Custom Server Entrypoint \ud83c\udfac",a={id:"advanced/custom_entrypoint",title:"\ud83c\udfac Custom Server Entrypoint",description:"Dart Frog supports creating a custom entrypoint in cases where you need fine-grained control over the server initialization or wish to execute code prior to starting the server.",source:"@site/docs/advanced/custom_entrypoint.md",sourceDirName:"advanced",slug:"/advanced/custom_entrypoint",permalink:"/docs/advanced/custom_entrypoint",draft:!1,unlisted:!1,editUrl:"https://github.com/VeryGoodOpenSource/dart_frog/tree/main/docs/docs/advanced/custom_entrypoint.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"\ud83c\udfac Custom Server Entrypoint"},sidebar:"docs",previous:{title:"Advanced",permalink:"/docs/category/advanced"},next:{title:"\ud83d\udeeb Custom Init Method",permalink:"/docs/advanced/custom_init_method"}},c={},d=[{value:"Creating a Custom Entrypoint \u2728",id:"creating-a-custom-entrypoint-",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"custom-server-entrypoint-",children:"Custom Server Entrypoint \ud83c\udfac"})}),"\n",(0,n.jsx)(t.p,{children:"Dart Frog supports creating a custom entrypoint in cases where you need fine-grained control over the server initialization or wish to execute code prior to starting the server."}),"\n",(0,n.jsx)(t.h2,{id:"creating-a-custom-entrypoint-",children:"Creating a Custom Entrypoint \u2728"}),"\n",(0,n.jsxs)(t.p,{children:["To create a custom entrypoint, simply create a ",(0,n.jsx)(t.code,{children:"main.dart"})," file at the root of your Dart Frog project. The ",(0,n.jsx)(t.code,{children:"main.dart"})," file must expose a top-level ",(0,n.jsx)(t.code,{children:"run"})," method with the following signature:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"import 'dart:io';\n\nimport 'package:dart_frog/dart_frog.dart';\n\nFuture<HttpServer> run(Handler handler, InternetAddress ip, int port) {\n  // 1. Execute any custom code prior to starting the server...\n\n  // 2. Use the provided `handler`, `ip`, and `port` to create a custom `HttpServer`.\n  // Or use the Dart Frog serve method to do that for you.\n  return serve(handler, ip, port);\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The Dart Frog CLI will detect the custom entrypoint and execute your custom ",(0,n.jsx)(t.code,{children:"run"})," method instead of the default implementation."]})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>s});var n=r(7294);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);